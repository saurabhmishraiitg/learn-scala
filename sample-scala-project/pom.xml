<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.example</groupId>
    <artifactId>sample-scala-project</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>sample-scala-project</name>
    <url>http://maven.apache.org</url>
    <properties>
        <productLines>gg</productLines>
        <notifyEmail>saurabh.mishra@wxxx.com</notifyEmail>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <maven.compiler.release>11</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Scala Version-->
        <scala.version>2.12.14</scala.version>
        <scala.major.version>2.12</scala.major.version>
        <!-- Logging Version -->
        <logback.classic.version>1.4.7</logback.classic.version>
        <!-- Scalatest Version -->
        <scalatest.version>3.2.18</scalatest.version>
        <log4j.version>2.23.0</log4j.version>
        <!-- Plugin Versions-->
        <!-- <maven.compiler.version>3.8.1</maven.compiler.version> -->
        <maven.scala.plugin.version>4.5.6</maven.scala.plugin.version>
        <maven.shade.plugin.version>3.5.2</maven.shade.plugin.version>
        <!-- <maven.surefire.plugin.version>2.7</maven.surefire.plugin.version> -->
        <maven.release.plugin.version>3.0.0</maven.release.plugin.version>
        <maven.site.plugin.version>3.12.1</maven.site.plugin.version>
        <maven.deploy.plugin.version>2.8.2</maven.deploy.plugin.version>
        <scalatest.maven.plugin.version>2.2.0</scalatest.maven.plugin.version>
        <maven.source.plugin.version>3.2.1</maven.source.plugin.version>
        <maven.assembly.plugin.verion>3.3.0</maven.assembly.plugin.verion>
        <maven.properties.plugin.verion>1.0.0</maven.properties.plugin.verion>
        <!-- Code Coverage Dependencies -->
        <jacoco.plugin.version>0.8.8</jacoco.plugin.version>
        <maven.sonar.plugin.version>3.9.1.2184</maven.sonar.plugin.version>
        <jacoco.coverage.ratio>0.80</jacoco.coverage.ratio>
        <!-- Sonar properties-->
        <sonar.host.url>http://sonar.wal-mart.com</sonar.host.url>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.language>scala</sonar.language>
        <sonar.sourceEncoding>${project.build.sourceEncoding}</sonar.sourceEncoding>
        <sonar.scala.version>${scala.version}</sonar.scala.version>
        <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
        <sonar.sources>src/main/scala</sonar.sources>
        <sonar.tests>src/test/scala</sonar.tests>
        <sonar.binaries>target/classes</sonar.binaries>
    </properties>
    <scm>
        <connection>scm:git:https://gecgithub01.wxxx.com/Datalake/${project.artifactId}.git</connection>
        <developerConnection>scm:git:https://gecgithub01.wxxx.com/Datalake/${project.artifactId}.git
        </developerConnection>
        <url>https://gecgithub01.wxxx.com/Datalake/${project.artifactId}.git</url>
        <tag>HEAD</tag>
    </scm>
    <distributionManagement>
        <!--Artifactory Repo-->
        <repository>
            <id>af-release</id>
            <!--suppress UnresolvedMavenProperty -->
            <url>${env.REPOSOLNS_MVN_REPO}</url>
        </repository>
        <snapshotRepository>
            <id>af-snapshot</id>
            <!--suppress UnresolvedMavenProperty -->
            <url>${env.REPOSOLNS_MVN_REPO}</url>
        </snapshotRepository>
    </distributionManagement>
    <dependencies>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-reflect</artifactId>
            <version>${scala.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-compiler</artifactId>
            <version>${scala.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- logging libraries -->
        <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.classic.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- Testing Framework -->
        <dependency>
            <groupId>org.scalactic</groupId>
            <artifactId>scalactic_${scala.major.version}</artifactId>
            <version>${scalatest.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.major.version}</artifactId>
            <version>${scalatest.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <finalName>${project.artifactId}</finalName>
        <sourceDirectory>src/main/scala</sourceDirectory>
        <testSourceDirectory>src/test/scala</testSourceDirectory>
        <plugins>
            <!-- Generates the coverage report for uploading to sonar-->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.plugin.version}</version>
                <configuration>
                    <output>file</output>
                    <append>false</append>
                </configuration>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jacoco-site</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jacoco-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit>
                                            <counter>INSTRUCTION</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco.coverage.ratio}</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- to trigger run mvn sonar:sonar -->
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>${maven.sonar.plugin.version}</version>
            </plugin>
            <!-- <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
            </plugin> -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven.deploy.plugin.version}</version>
                <configuration>
                    <updateReleaseInfo>true</updateReleaseInfo>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>${maven.site.plugin.version}</version>
                <configuration>
                    <skip>true</skip>
                    <skipDeploy>true</skipDeploy>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>${maven.release.plugin.version}</version>
                <configuration>
                    <localCheckout>true</localCheckout>
                    <!-- must be true -->
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <useReleaseProfile>false
                    </useReleaseProfile>
                    <!-- To fix the issue with mutiple push for source jar during release phase -->
                </configuration>
            </plugin>
            <!-- This plugin compiles Scala files -->
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>${maven.scala.plugin.version}</version>
                <executions>
                    <execution>
                        <id>scala-compile-first</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>add-source</goal>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <args>
                                <arg>-dependencyfile</arg>
                                <arg>${project.build.directory}/.scala_dependencies</arg>
                            </args>
                        </configuration>
                    </execution>
                    <execution>
                        <id>scala-test-compile</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- enable scalatest -->
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <version>${scalatest.maven.plugin.version}</version>
                <configuration>
                    <tagsToExclude>com.wxxx.dsi.gg.LocalOnlyTests</tagsToExclude>
                </configuration>
                <executions>
                    <execution>
                        <id>test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
